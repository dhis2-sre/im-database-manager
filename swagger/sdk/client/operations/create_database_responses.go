// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dhis2-sre/im-database-manager/swagger/sdk/models"
)

// CreateDatabaseReader is a Reader for the CreateDatabase structure.
type CreateDatabaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDatabaseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewCreateDatabaseAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateDatabaseUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateDatabaseForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewCreateDatabaseUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateDatabaseAccepted creates a CreateDatabaseAccepted with default headers values
func NewCreateDatabaseAccepted() *CreateDatabaseAccepted {
	return &CreateDatabaseAccepted{}
}

/* CreateDatabaseAccepted describes a response with status code 202, with default header values.

Database
*/
type CreateDatabaseAccepted struct {
	Payload *models.Database
}

func (o *CreateDatabaseAccepted) Error() string {
	return fmt.Sprintf("[POST /databases][%d] createDatabaseAccepted  %+v", 202, o.Payload)
}
func (o *CreateDatabaseAccepted) GetPayload() *models.Database {
	return o.Payload
}

func (o *CreateDatabaseAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Database)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDatabaseUnauthorized creates a CreateDatabaseUnauthorized with default headers values
func NewCreateDatabaseUnauthorized() *CreateDatabaseUnauthorized {
	return &CreateDatabaseUnauthorized{}
}

/* CreateDatabaseUnauthorized describes a response with status code 401, with default header values.

CreateDatabaseUnauthorized create database unauthorized
*/
type CreateDatabaseUnauthorized struct {
}

func (o *CreateDatabaseUnauthorized) Error() string {
	return fmt.Sprintf("[POST /databases][%d] createDatabaseUnauthorized ", 401)
}

func (o *CreateDatabaseUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateDatabaseForbidden creates a CreateDatabaseForbidden with default headers values
func NewCreateDatabaseForbidden() *CreateDatabaseForbidden {
	return &CreateDatabaseForbidden{}
}

/* CreateDatabaseForbidden describes a response with status code 403, with default header values.

CreateDatabaseForbidden create database forbidden
*/
type CreateDatabaseForbidden struct {
}

func (o *CreateDatabaseForbidden) Error() string {
	return fmt.Sprintf("[POST /databases][%d] createDatabaseForbidden ", 403)
}

func (o *CreateDatabaseForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateDatabaseUnsupportedMediaType creates a CreateDatabaseUnsupportedMediaType with default headers values
func NewCreateDatabaseUnsupportedMediaType() *CreateDatabaseUnsupportedMediaType {
	return &CreateDatabaseUnsupportedMediaType{}
}

/* CreateDatabaseUnsupportedMediaType describes a response with status code 415, with default header values.

CreateDatabaseUnsupportedMediaType create database unsupported media type
*/
type CreateDatabaseUnsupportedMediaType struct {
}

func (o *CreateDatabaseUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /databases][%d] createDatabaseUnsupportedMediaType ", 415)
}

func (o *CreateDatabaseUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
