// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dhis2-sre/im-database-manager/swagger/sdk/models"
)

// CreateExternalDownloadDatabaseReader is a Reader for the CreateExternalDownloadDatabase structure.
type CreateExternalDownloadDatabaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateExternalDownloadDatabaseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateExternalDownloadDatabaseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateExternalDownloadDatabaseUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateExternalDownloadDatabaseForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateExternalDownloadDatabaseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewCreateExternalDownloadDatabaseUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateExternalDownloadDatabaseOK creates a CreateExternalDownloadDatabaseOK with default headers values
func NewCreateExternalDownloadDatabaseOK() *CreateExternalDownloadDatabaseOK {
	return &CreateExternalDownloadDatabaseOK{}
}

/* CreateExternalDownloadDatabaseOK describes a response with status code 200, with default header values.

CreateExternalDownloadDatabaseOK create external download database o k
*/
type CreateExternalDownloadDatabaseOK struct {
	Payload *models.ExternalDownload
}

func (o *CreateExternalDownloadDatabaseOK) Error() string {
	return fmt.Sprintf("[POST /databases/{id}/external][%d] createExternalDownloadDatabaseOK  %+v", 200, o.Payload)
}
func (o *CreateExternalDownloadDatabaseOK) GetPayload() *models.ExternalDownload {
	return o.Payload
}

func (o *CreateExternalDownloadDatabaseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExternalDownload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateExternalDownloadDatabaseUnauthorized creates a CreateExternalDownloadDatabaseUnauthorized with default headers values
func NewCreateExternalDownloadDatabaseUnauthorized() *CreateExternalDownloadDatabaseUnauthorized {
	return &CreateExternalDownloadDatabaseUnauthorized{}
}

/* CreateExternalDownloadDatabaseUnauthorized describes a response with status code 401, with default header values.

CreateExternalDownloadDatabaseUnauthorized create external download database unauthorized
*/
type CreateExternalDownloadDatabaseUnauthorized struct {
}

func (o *CreateExternalDownloadDatabaseUnauthorized) Error() string {
	return fmt.Sprintf("[POST /databases/{id}/external][%d] createExternalDownloadDatabaseUnauthorized ", 401)
}

func (o *CreateExternalDownloadDatabaseUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateExternalDownloadDatabaseForbidden creates a CreateExternalDownloadDatabaseForbidden with default headers values
func NewCreateExternalDownloadDatabaseForbidden() *CreateExternalDownloadDatabaseForbidden {
	return &CreateExternalDownloadDatabaseForbidden{}
}

/* CreateExternalDownloadDatabaseForbidden describes a response with status code 403, with default header values.

CreateExternalDownloadDatabaseForbidden create external download database forbidden
*/
type CreateExternalDownloadDatabaseForbidden struct {
}

func (o *CreateExternalDownloadDatabaseForbidden) Error() string {
	return fmt.Sprintf("[POST /databases/{id}/external][%d] createExternalDownloadDatabaseForbidden ", 403)
}

func (o *CreateExternalDownloadDatabaseForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateExternalDownloadDatabaseNotFound creates a CreateExternalDownloadDatabaseNotFound with default headers values
func NewCreateExternalDownloadDatabaseNotFound() *CreateExternalDownloadDatabaseNotFound {
	return &CreateExternalDownloadDatabaseNotFound{}
}

/* CreateExternalDownloadDatabaseNotFound describes a response with status code 404, with default header values.

CreateExternalDownloadDatabaseNotFound create external download database not found
*/
type CreateExternalDownloadDatabaseNotFound struct {
}

func (o *CreateExternalDownloadDatabaseNotFound) Error() string {
	return fmt.Sprintf("[POST /databases/{id}/external][%d] createExternalDownloadDatabaseNotFound ", 404)
}

func (o *CreateExternalDownloadDatabaseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateExternalDownloadDatabaseUnsupportedMediaType creates a CreateExternalDownloadDatabaseUnsupportedMediaType with default headers values
func NewCreateExternalDownloadDatabaseUnsupportedMediaType() *CreateExternalDownloadDatabaseUnsupportedMediaType {
	return &CreateExternalDownloadDatabaseUnsupportedMediaType{}
}

/* CreateExternalDownloadDatabaseUnsupportedMediaType describes a response with status code 415, with default header values.

CreateExternalDownloadDatabaseUnsupportedMediaType create external download database unsupported media type
*/
type CreateExternalDownloadDatabaseUnsupportedMediaType struct {
}

func (o *CreateExternalDownloadDatabaseUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /databases/{id}/external][%d] createExternalDownloadDatabaseUnsupportedMediaType ", 415)
}

func (o *CreateExternalDownloadDatabaseUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
