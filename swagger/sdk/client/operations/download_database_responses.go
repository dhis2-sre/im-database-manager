// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DownloadDatabaseReader is a Reader for the DownloadDatabase structure.
type DownloadDatabaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DownloadDatabaseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDownloadDatabaseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDownloadDatabaseUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDownloadDatabaseForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDownloadDatabaseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDownloadDatabaseUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDownloadDatabaseOK creates a DownloadDatabaseOK with default headers values
func NewDownloadDatabaseOK() *DownloadDatabaseOK {
	return &DownloadDatabaseOK{}
}

/*
DownloadDatabaseOK describes a response with status code 200, with default header values.

DownloadDatabaseOK download database o k
*/
type DownloadDatabaseOK struct {
}

func (o *DownloadDatabaseOK) Error() string {
	return fmt.Sprintf("[GET /databases/{id}/download][%d] downloadDatabaseOK ", 200)
}

func (o *DownloadDatabaseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDownloadDatabaseUnauthorized creates a DownloadDatabaseUnauthorized with default headers values
func NewDownloadDatabaseUnauthorized() *DownloadDatabaseUnauthorized {
	return &DownloadDatabaseUnauthorized{}
}

/*
DownloadDatabaseUnauthorized describes a response with status code 401, with default header values.

DownloadDatabaseUnauthorized download database unauthorized
*/
type DownloadDatabaseUnauthorized struct {
}

func (o *DownloadDatabaseUnauthorized) Error() string {
	return fmt.Sprintf("[GET /databases/{id}/download][%d] downloadDatabaseUnauthorized ", 401)
}

func (o *DownloadDatabaseUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDownloadDatabaseForbidden creates a DownloadDatabaseForbidden with default headers values
func NewDownloadDatabaseForbidden() *DownloadDatabaseForbidden {
	return &DownloadDatabaseForbidden{}
}

/*
DownloadDatabaseForbidden describes a response with status code 403, with default header values.

DownloadDatabaseForbidden download database forbidden
*/
type DownloadDatabaseForbidden struct {
}

func (o *DownloadDatabaseForbidden) Error() string {
	return fmt.Sprintf("[GET /databases/{id}/download][%d] downloadDatabaseForbidden ", 403)
}

func (o *DownloadDatabaseForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDownloadDatabaseNotFound creates a DownloadDatabaseNotFound with default headers values
func NewDownloadDatabaseNotFound() *DownloadDatabaseNotFound {
	return &DownloadDatabaseNotFound{}
}

/*
DownloadDatabaseNotFound describes a response with status code 404, with default header values.

DownloadDatabaseNotFound download database not found
*/
type DownloadDatabaseNotFound struct {
}

func (o *DownloadDatabaseNotFound) Error() string {
	return fmt.Sprintf("[GET /databases/{id}/download][%d] downloadDatabaseNotFound ", 404)
}

func (o *DownloadDatabaseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDownloadDatabaseUnsupportedMediaType creates a DownloadDatabaseUnsupportedMediaType with default headers values
func NewDownloadDatabaseUnsupportedMediaType() *DownloadDatabaseUnsupportedMediaType {
	return &DownloadDatabaseUnsupportedMediaType{}
}

/*
DownloadDatabaseUnsupportedMediaType describes a response with status code 415, with default header values.

DownloadDatabaseUnsupportedMediaType download database unsupported media type
*/
type DownloadDatabaseUnsupportedMediaType struct {
}

func (o *DownloadDatabaseUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /databases/{id}/download][%d] downloadDatabaseUnsupportedMediaType ", 415)
}

func (o *DownloadDatabaseUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
