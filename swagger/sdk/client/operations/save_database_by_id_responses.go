// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dhis2-sre/im-database-manager/swagger/sdk/models"
)

// SaveDatabaseByIDReader is a Reader for the SaveDatabaseByID structure.
type SaveDatabaseByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SaveDatabaseByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewSaveDatabaseByIDAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSaveDatabaseByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSaveDatabaseByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSaveDatabaseByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewSaveDatabaseByIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSaveDatabaseByIDAccepted creates a SaveDatabaseByIDAccepted with default headers values
func NewSaveDatabaseByIDAccepted() *SaveDatabaseByIDAccepted {
	return &SaveDatabaseByIDAccepted{}
}

/* SaveDatabaseByIDAccepted describes a response with status code 202, with default header values.

SaveDatabaseByIDAccepted save database by Id accepted
*/
type SaveDatabaseByIDAccepted struct {
	Payload *models.SaveDatabaseResponse
}

func (o *SaveDatabaseByIDAccepted) Error() string {
	return fmt.Sprintf("[POST /databases/{id}/save][%d] saveDatabaseByIdAccepted  %+v", 202, o.Payload)
}
func (o *SaveDatabaseByIDAccepted) GetPayload() *models.SaveDatabaseResponse {
	return o.Payload
}

func (o *SaveDatabaseByIDAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SaveDatabaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSaveDatabaseByIDUnauthorized creates a SaveDatabaseByIDUnauthorized with default headers values
func NewSaveDatabaseByIDUnauthorized() *SaveDatabaseByIDUnauthorized {
	return &SaveDatabaseByIDUnauthorized{}
}

/* SaveDatabaseByIDUnauthorized describes a response with status code 401, with default header values.

SaveDatabaseByIDUnauthorized save database by Id unauthorized
*/
type SaveDatabaseByIDUnauthorized struct {
}

func (o *SaveDatabaseByIDUnauthorized) Error() string {
	return fmt.Sprintf("[POST /databases/{id}/save][%d] saveDatabaseByIdUnauthorized ", 401)
}

func (o *SaveDatabaseByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveDatabaseByIDForbidden creates a SaveDatabaseByIDForbidden with default headers values
func NewSaveDatabaseByIDForbidden() *SaveDatabaseByIDForbidden {
	return &SaveDatabaseByIDForbidden{}
}

/* SaveDatabaseByIDForbidden describes a response with status code 403, with default header values.

SaveDatabaseByIDForbidden save database by Id forbidden
*/
type SaveDatabaseByIDForbidden struct {
}

func (o *SaveDatabaseByIDForbidden) Error() string {
	return fmt.Sprintf("[POST /databases/{id}/save][%d] saveDatabaseByIdForbidden ", 403)
}

func (o *SaveDatabaseByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveDatabaseByIDNotFound creates a SaveDatabaseByIDNotFound with default headers values
func NewSaveDatabaseByIDNotFound() *SaveDatabaseByIDNotFound {
	return &SaveDatabaseByIDNotFound{}
}

/* SaveDatabaseByIDNotFound describes a response with status code 404, with default header values.

SaveDatabaseByIDNotFound save database by Id not found
*/
type SaveDatabaseByIDNotFound struct {
}

func (o *SaveDatabaseByIDNotFound) Error() string {
	return fmt.Sprintf("[POST /databases/{id}/save][%d] saveDatabaseByIdNotFound ", 404)
}

func (o *SaveDatabaseByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveDatabaseByIDUnsupportedMediaType creates a SaveDatabaseByIDUnsupportedMediaType with default headers values
func NewSaveDatabaseByIDUnsupportedMediaType() *SaveDatabaseByIDUnsupportedMediaType {
	return &SaveDatabaseByIDUnsupportedMediaType{}
}

/* SaveDatabaseByIDUnsupportedMediaType describes a response with status code 415, with default header values.

SaveDatabaseByIDUnsupportedMediaType save database by Id unsupported media type
*/
type SaveDatabaseByIDUnsupportedMediaType struct {
}

func (o *SaveDatabaseByIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /databases/{id}/save][%d] saveDatabaseByIdUnsupportedMediaType ", 415)
}

func (o *SaveDatabaseByIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
